Fertilizer = {'pound': [100,200,300,400,500,600,700],
'Rainfall': [10, 20,10,30,20,20,30],
'Yield': [40,50,50,70,65,65,80,]
              }
df = DataFrame(Fertilizer,columns=['pound','Rainfall','Yield'])
print (df)
from pandas import DataFrame
from sklearn import linear_model
import statsmodels.api as sm

Fertilizer = {'pound': [100,200,300,400,500,600,700],
    'Rainfall': [10, 20,10,30,20,20,30],
    'Yield': [40,50,50,70,65,65,80,]
              }

df = DataFrame(Fertilizer, columns=['pound', 'Rainfall', 'Yield'])

X = df[['Fertilizers',
        'Pound']]  # here we have 2 variables for multiple regression. If you just want to use one variable for simple linear regression, then use X = df['Interest_Rate'] for example.Alternatively, you may add additional variables within the brackets
Y = df['Rainfall']

# with sklearn
regr = linear_model.LinearRegression()
regr.fit(X, Y)

print('Intercept: \n', regr.intercept_)
print('Coefficients: \n', regr.coef_)

# prediction with sklearn
New_Interest_Rate = 2.75
New_Unemployment_Rate = 5.3
print ('Yield: \n', regr.predict([[New_pound, new_Rainfall]]))

# with statsmodels
X = sm.add_constant(X)  # adding a constant

model = sm.OLS(Y, X).fit()
predictions = model.predict(X)

print_model = model.summary()
print(print_model)
